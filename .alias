alias bwcheck='bw unlock --check'
alias bwlock='bw lock'
alias bwunlock='export BW_SESSION="$(bw unlock --raw)"'
alias gitpuf="git push --force-with-lease"
alias qr='qrencode -t utf8'
alias vi=nvim
alias vim=nvim

function gitclean {
    git remote prune origin
    git branch --merged | egrep -v "(^\*|master|main)" | xargs git branch -d
}

function gitlog {
    if [ "$1" = "-s" ]; then
        git log --show-signature
    else
        git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
    fi
}

function gitrw {
    git_web_url="$(git remote get-url origin | sed -r "s/ssh:\/\/.+@/https:\/\//g" | sed -r "s/:[0-9]+//g")"
    echo "Opening $git_web_url"
    if [ "$(uname -s)" = "Darwin" ]; then
        open "$git_web_url"
    else
        xdg-open "$git_web_url"
    fi
}

function help() {
    "$@" --help 2>&1 | bat --plain --language=help
}

function quack {
    local DUCK_TOKEN=$(op item get "DuckDuckGo Email" --fields Token --reveal)
    curl --silent \
        -X POST \
        -H "Authorization: Bearer $DUCK_TOKEN" \
        https://quack.duckduckgo.com/api/email/addresses \
        | jq --raw-output .address \
        | awk '{print $1"@duck.com"}'
}

function venv {
    if [ ! -d .venv ]; then
        echo "Using $(python3 -V)"
        read -q "choice?Can't find .venv in the current working directory. Create a venv? (y/n) "
        echo
        [[ "$choice" == "y" ]] || return 1
        uv venv --seed .venv
    fi
    echo "Activating venv"
    source .venv/bin/activate
}

if type kubecolor &> /dev/null; then
    alias k=kubecolor
elif type kubectl &> /dev/null; then
    alias k=kubectl
fi

# MacOS aliases
if [ "$(uname -s)" = "Darwin" ]; then
    alias sha256sum='shasum -a 256'
    alias tailscale='/Applications/Tailscale.app/Contents/MacOS/Tailscale'
fi
